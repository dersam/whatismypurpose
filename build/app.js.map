{"version":3,"sources":["butter.js","chatbox.js","interjections.js"],"names":["butter","$","onPurposeRequest","verb","getVerbFromDictionary","trigger","getNounFromDictionary","tags","init","on","getRandomInt","min","max","Math","floor","random","getKindaRandomVerbIndex","v","verbs","length","lastVerb","getKindaRandomNounIndex","tag","n","nouns","words","lastTag","lastNoun","forbid","index","global","loadData","getJSON","data","document","ready","jQuery","chatbox","onPurposeResponse","event","noun","writeToChat","$history","scrollTop","prop","user","text","append","interjections"],"mappings":"AACA,GAAIA,QAAS,SAAUC,GAWnB,QAASC,KACL,GAAIC,GAAOC,GAEXH,GAAE,QAAQI,QAAS,mBACfF,EAAKA,KACLG,EAAsBH,EAAKI,QAInC,QAASC,KACLP,EAAE,YAAYQ,GAAG,QAASP,GAG9B,QAASQ,GAAaC,EAAKC,GACvB,MAAOC,MAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EAKzD,QAASK,KACL,GAAIC,GAAIP,EAAa,EAAGQ,EAAMC,OAAO,EAQrC,OANIF,IAAKG,IACLH,EAAID,KAGRI,EAAWH,EAEJA,EAGX,QAASI,GAAwBC,GAC7B,GAAIC,GAAIb,EAAa,EAAGc,EAAMF,GAAKG,MAAMN,OAAO,EAShD,OAPIG,IAAOI,GAAWH,GAAKI,IACvBJ,EAAIF,KAGRM,EAAWJ,EACXG,EAAUJ,EAEHC,EAGX,QAASnB,KACL,GAAIa,GAAI,MAMR,OAJc,QAAVC,IACAD,EAAIC,EAAMF,MAGPC,EAGX,QAASX,GAAsBC,GAC3B,GAAIgB,GAAI,QAER,IAAc,OAAVC,GAC2B,IAAvBjB,EAAKqB,OAAOT,OAAc,CAC1B,GAAIU,GAAQR,EAAwB,SACpCE,GAAIC,EAAMM,OAAOL,MAAMI,GAQ/B,MAAON,GAGX,QAASQ,KAEL9B,EAAE+B,QAAQ,4BAA6B,SAASC,GAC5Cf,EAAQe,EAAKf,MACbM,EAAQS,EAAK1B,OArFrB,GAAIW,GAAQ,KACRM,EAAQ,KAERJ,EAAW,KACXO,EAAW,KACXD,EAAU,MAuFd,WACIzB,EAAEiC,UAAUC,MAAM3B,GAGlBuB,QAELK;ACpGH,GAAIC,SAAU,SAAUpC,GAGpB,QAASqC,GAAkBC,EAAOpC,EAAMqC,GACpCC,EAAY,YAAa,uBACzBA,EAAY,YAAa,OAAOtC,EAAK,IAAIqC,EAAK,KAE9CE,EAASC,UAAUD,EAASE,KAAK,iBAGrC,QAASH,GAAYI,EAAMC,GACvBJ,EAASK,OAAO,oBAAoBF,EAAK,KAAKA,EAAK,KAAKC,EAAK,UAGjE,QAAStC,KACLkC,EAAWzC,EAAE,YACbA,EAAE,QAAQQ,GAAG,kBAAmB6B,GAfpC,GAAII,IAkBJ,WACIzC,EAAEiC,UAAUC,MAAM3B,OAEvB4B;ACtBH,GAAIY,eAAgB,SAAS/C,KAE3BmC","file":"app.js","sourcesContent":["\nvar butter = (function($){\n    var verbs = null;\n    var nouns = null;\n\n    var lastVerb = null;\n    var lastNoun = null;\n    var lastTag = null;\n\n    /**\n     * SHOW ME WHAT YOU GOT\n     */\n    function onPurposeRequest() {\n        var verb = getVerbFromDictionary();\n\n        $('body').trigger( \"purposeResponse\", [\n            verb.verb,\n            getNounFromDictionary(verb.tags)\n        ]);\n    }\n\n    function init() {\n        $('.purpose').on('click', onPurposeRequest);\n    }\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    //Recursion for kicks.\n\n    function getKindaRandomVerbIndex() {\n        var v = getRandomInt(0, verbs.length-1);\n\n        if (v == lastVerb) {\n            v = getKindaRandomVerbIndex();\n        }\n\n        lastVerb = v;\n\n        return v;\n    }\n\n    function getKindaRandomNounIndex(tag) {\n        var n = getRandomInt(0, nouns[tag].words.length-1);\n\n        if (tag != lastTag && n == lastNoun) {\n            n = getKindaRandomNounIndex();\n        }\n\n        lastNoun = n;\n        lastTag = tag;\n\n        return n;\n    }\n\n    function getVerbFromDictionary() {\n        var v = 'pass';\n\n        if (verbs !== null) {\n            v = verbs[getKindaRandomVerbIndex()];\n        }\n\n        return v;\n    }\n\n    function getNounFromDictionary(tags) {\n        var n = 'butter';\n\n        if (nouns !== null) {\n            if (tags.forbid.length === 0) {\n                var index = getKindaRandomNounIndex('global');\n                n = nouns.global.words[index];\n            } else {\n                //if the list of tags doesn't exist, build it\n                //then, pick from the tags that are not forbidden\n                //always exclude global here\n            }\n        }\n\n        return n;\n    }\n\n    function loadData()\n    {\n        $.getJSON('build/words.compiled.json', function(data) {\n            verbs = data.verbs;\n            nouns = data.tags;\n        });\n    }\n\n    /**\n     * fire the plasma cannon\n     */\n    (function __init(){\n        $(document).ready(init);\n\n        //Load files\n        loadData();\n    })();\n})(jQuery);","var chatbox = (function($) {\n    var $history;\n\n    function onPurposeResponse(event, verb, noun) {\n        writeToChat('butterbot', 'what is my purpose?');\n        writeToChat('bigrick69', 'you '+verb+' '+noun+'.');\n\n        $history.scrollTop($history.prop('scrollHeight'));\n    }\n\n    function writeToChat(user, text) {\n        $history.append('<div class=\"line '+user+'\">'+user+': '+text+'</div>');\n    }\n\n    function init() {\n        $history = $('#history');\n        $('body').on('purposeResponse', onPurposeResponse);\n    }\n\n    (function __init(){\n        $(document).ready(init);\n    })();\n})(jQuery);","var interjections = function($){\n\n}(jQuery);"],"sourceRoot":"/source/"}