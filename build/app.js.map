{"version":3,"sources":["butter.js","chatbox.js","interjections.js"],"names":["butter","$","onPurposeRequest","verb","getVerbFromDictionary","trigger","getNounFromDictionary","tags","init","on","getRandomInt","min","max","Math","floor","random","getKindaRandomVerbIndex","v","verbs","length","lastVerb","n","nouns","forbid","index","global","words","nounClone","clone","forEach","tagName","result","count","prop","loadData","getJSON","data","document","ready","jQuery","chatbox","onPurposeResponse","event","noun","writeToChat","$history","scrollTop","user","text","append","interjections"],"mappings":"AACA,GAAIA,QAAS,SAAUC,GAWnB,QAASC,KACL,GAAIC,GAAOC,GAEXH,GAAE,QAAQI,QAAS,mBACfF,EAAKA,KACLG,EAAsBH,EAAKI,QAInC,QAASC,KACLP,EAAE,YAAYQ,GAAG,QAASP,GAG9B,QAASQ,GAAaC,EAAKC,GACvB,MAAOC,MAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EAKzD,QAASK,KACL,GAAIC,GAAIP,EAAa,EAAGQ,EAAMC,OAAO,EAQrC,OANIF,IAAKG,IACLH,EAAID,KAGRI,EAAWH,EAEJA,EAGX,QAASb,KACL,GAAIa,GAAI,MAMR,OAJc,QAAVC,IACAD,EAAIC,EAAMF,MAGPC,EAGX,QAASX,GAAsBC,GAC3B,GAAIc,GAAI,QAER,IAAc,OAAVC,EACA,GAA2B,IAAvBf,EAAKgB,OAAOJ,OAAc,CAC1B,GAAIK,GAAQd,EAAa,EAAGY,EAAMG,OAAOC,MAAMP,OAAO,EACtDE,GAAIC,EAAMG,OAAOC,MAAMF,OACpB,CAKH,GAAIG,GAAYC,MAAMN,EAEtBf,GAAKgB,OAAOM,QAAQ,SAASC,SAClBH,GAAUG,IAGrB,IAAIC,GACAC,EAAQ,CACZ,KAAK,GAAIC,KAAQN,GACTd,KAAKE,SAAW,IAAMiB,IACtBD,EAASE,EAGjBZ,GAAIU,EAAOL,MAAMhB,EAAa,EAAGqB,EAAOL,MAAMP,OAAO,IAI7D,MAAOE,GAGX,QAASa,KAELjC,EAAEkC,QAAQ,4BAA6B,SAASC,GAC5ClB,EAAQkB,EAAKlB,MACbI,EAAQc,EAAK7B,OAvFrB,GAAIW,GAAQ,KACRI,EAAQ,KAERF,EAAW,MA2Ff,WACInB,EAAEoC,UAAUC,MAAM9B,GAGlB0B,QAELK;ACtGH,GAAIC,SAAU,SAAUvC,GAGpB,QAASwC,GAAkBC,EAAOvC,EAAMwC,GACpCC,EAAY,YAAa,uBACzBA,EAAY,YAAa,OAAOzC,EAAK,IAAIwC,EAAK,KAE9CE,EAASC,UAAUD,EAASZ,KAAK,iBAGrC,QAASW,GAAYG,EAAMC,GACvBH,EAASI,OAAO,oBAAoBF,EAAK,KAAKA,EAAK,KAAKC,EAAK,UAGjE,QAASxC,KACLqC,EAAW5C,EAAE,YACbA,EAAE,QAAQQ,GAAG,kBAAmBgC,GAfpC,GAAII,IAkBJ,WACI5C,EAAEoC,UAAUC,MAAM9B,OAEvB+B;ACtBH,GAAIW,eAAgB,SAASjD,KAE3BsC","file":"app.js","sourcesContent":["\nvar butter = (function($){\n    var verbs = null;\n    var nouns = null;\n\n    var lastVerb = null;\n    var lastNoun = null;\n    var lastTag = null;\n\n    /**\n     * SHOW ME WHAT YOU GOT\n     */\n    function onPurposeRequest() {\n        var verb = getVerbFromDictionary();\n\n        $('body').trigger( \"purposeResponse\", [\n            verb.verb,\n            getNounFromDictionary(verb.tags)\n        ]);\n    }\n\n    function init() {\n        $('.purpose').on('click', onPurposeRequest);\n    }\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    //Recursion for kicks.\n\n    function getKindaRandomVerbIndex() {\n        var v = getRandomInt(0, verbs.length-1);\n\n        if (v == lastVerb) {\n            v = getKindaRandomVerbIndex();\n        }\n\n        lastVerb = v;\n\n        return v;\n    }\n\n    function getVerbFromDictionary() {\n        var v = 'pass';\n\n        if (verbs !== null) {\n            v = verbs[getKindaRandomVerbIndex()];\n        }\n\n        return v;\n    }\n\n    function getNounFromDictionary(tags) {\n        var n = 'butter';\n\n        if (nouns !== null) {\n            if (tags.forbid.length === 0) {\n                var index = getRandomInt(0, nouns.global.words.length-1);\n                n = nouns.global.words[index];\n            } else {\n                //if the list of tags doesn't exist, build it\n                //then, pick from the tags that are not forbidden\n                //always exclude global here\n\n                var nounClone = clone(nouns);\n\n                tags.forbid.forEach(function(tagName){\n                    delete nounClone[tagName];\n                });\n\n                var result;\n                var count = 0;\n                for (var prop in nounClone) {\n                    if (Math.random() < 1 / ++count) {\n                        result = prop;\n                    }\n                }\n                n = result.words[getRandomInt(0, result.words.length-1)];\n            }\n        }\n\n        return n;\n    }\n\n    function loadData()\n    {\n        $.getJSON('build/words.compiled.json', function(data) {\n            verbs = data.verbs;\n            nouns = data.tags;\n        });\n    }\n\n    /**\n     * fire the plasma cannon\n     */\n    (function __init(){\n        $(document).ready(init);\n\n        //Load files\n        loadData();\n    })();\n})(jQuery);","var chatbox = (function($) {\n    var $history;\n\n    function onPurposeResponse(event, verb, noun) {\n        writeToChat('butterbot', 'what is my purpose?');\n        writeToChat('bigrick69', 'you '+verb+' '+noun+'.');\n\n        $history.scrollTop($history.prop('scrollHeight'));\n    }\n\n    function writeToChat(user, text) {\n        $history.append('<div class=\"line '+user+'\">'+user+': '+text+'</div>');\n    }\n\n    function init() {\n        $history = $('#history');\n        $('body').on('purposeResponse', onPurposeResponse);\n    }\n\n    (function __init(){\n        $(document).ready(init);\n    })();\n})(jQuery);","var interjections = function($){\n\n}(jQuery);"],"sourceRoot":"/source/"}